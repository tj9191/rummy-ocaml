// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Reversed_list
//# unitInfo: Requires: Base, Base__List, Expect_test_config, Inline_test_config, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_expect_runtime__Test_block, Ppx_expect_runtime__Test_node, Ppx_expect_runtime__Types, Ppx_inline_test_lib, Ppx_module_timer_runtime, Stdlib
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst = "",
    cst_Reversed_list$0 = "Reversed_list",
    cst_reversed_list$0 = "reversed_list",
    cst_reversed_list_src_reversed$1 = "reversed_list/src/reversed_list.ml";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call14
   (f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13){
    return (f.l >= 0 ? f.l : f.l = f.length) == 14
            ? f(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13)
            : runtime.caml_call_gen
              (f,
               [a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    x_010 = [0, 1, [0, 2, 0]],
    x_009 = [0, 1, [0, 2, 0]],
    Base = global_data.Base,
    Stdlib = global_data.Stdlib,
    Ppx_expect_runtime_Types = global_data.Ppx_expect_runtime__Types,
    Base_List = global_data.Base__List,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Expect_test_config = global_data.Expect_test_config,
    Ppx_expect_runtime_Test_block = global_data.Ppx_expect_runtime__Test_block,
    Ppx_expect_runtime_Test_node = global_data.Ppx_expect_runtime__Test_node,
    Inline_test_config = global_data.Inline_test_config;
   caml_call1(Ppx_module_timer_runtime[4], cst_Reversed_list$0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_reversed_list$0);
   caml_call1(Ppx_expect_runtime[1][1], cst_reversed_list_src_reversed$1);
   caml_call2(Ppx_inline_test_lib[6], cst_reversed_list$0, "reversed_list.ml");
   var
    _l_ = [0, [0, [0, " (1 2) ", [0, cst]], [0, 492, 505, 516]]],
    _m_ = [0, 492, 496, 517],
    _r_ = [0, 400, 402, 517],
    _s_ = [0, 492, 517, 517],
    _t_ = [0, 400, 402, 517],
    cst_reversed_list_src_reversed$0 = cst_reversed_list_src_reversed$1,
    _b_ = [0, [0, [0, " (2 1) ", [0, cst]], [0, 744, 757, 768]]],
    _c_ = [0, 744, 748, 769],
    _h_ = [0, 652, 654, 769],
    _i_ = [0, 744, 769, 769],
    _j_ = [0, 652, 654, 769],
    cst_reversed_list_src_reversed = cst_reversed_list_src_reversed$1,
    cst_reversed_list = cst_reversed_list$0,
    cst_Reversed_list = cst_Reversed_list$0;
   function equal(cmp_a, a_001, b_002){
    var cmp_a$0 = cmp_a, a_001$0 = a_001, b_002$0 = b_002;
    for(;;){
     if(a_001$0 === b_002$0) return 1;
     if(! a_001$0) return b_002$0 ? 0 : 1;
     if(! b_002$0) return 0;
     var
      b_006 = b_002$0[2],
      b_004 = b_002$0[1],
      a_005 = a_001$0[2],
      a_003 = a_001$0[1],
      _B_ = caml_call2(cmp_a$0, a_003, b_004);
     if(! _B_) return _B_;
     var
      cmp_a$2 =
        function(cmp_a){
         function cmp_a$0(a_007, b_008){
          return caml_call2(cmp_a, a_007, b_008);
         }
         return cmp_a$0;
        },
      cmp_a$1 = cmp_a$2(cmp_a$0),
      cmp_a$0 = cmp_a$1,
      a_001$0 = a_005,
      b_002$0 = b_006;
    }
   }
   var
    of_list_rev = Base_List[63],
    rev = Base_List[63],
    rev_append = Base_List[64],
    rev_map = Base_List[66],
    rev_filter_map = Base_List[134],
    is_empty = Base_List[18],
    length = Base_List[45];
   function sexp_of_t(sexp_of_a, t){
    return caml_call2(Base_List[6], sexp_of_a, t);
   }
   if(typeof Ppx_inline_test_lib[3] !== "number"){
    var
     Ppx_expect_test_block$0 =
       caml_call1(Ppx_expect_runtime_Test_block[1], Expect_test_config),
     _k_ =
       function(param){
        var
         _y_ = sexp_of_t(Base[136], x_009),
         _z_ = caml_call1(Base[85][16], _y_);
        caml_call1(Stdlib[46], _z_);
        var _A_ = caml_call1(Ppx_expect_runtime_Types[4][1], 0);
        return caml_call1(Ppx_expect_test_block$0[2], _A_);
       },
     _n_ =
       caml_call3
        (Ppx_expect_runtime_Test_node[1][1],
         [0, Ppx_expect_runtime_Types[1][1]],
         _m_,
         _l_),
     _o_ = [0, [0, caml_call1(Ppx_expect_runtime_Types[4][1], 0), _n_], 0],
     _p_ = caml_call1(Ppx_expect_runtime_Types[4][1], 2),
     _q_ = caml_call1(Ppx_expect_runtime_Types[4][1], 1);
    caml_call14
     (Ppx_expect_test_block$0[3],
      cst_reversed_list_src_reversed$0,
      21,
      _t_,
      _s_,
      _r_,
      [0, Ppx_expect_runtime_Types[1][1]],
      0,
      _q_,
      _p_,
      0,
      0,
      Inline_test_config,
      _o_,
      _k_);
   }
   var With_sexp_of = [0, sexp_of_t];
   function sexp_of_t$0(sexp_of_a, t){
    var _x_ = caml_call1(rev, t);
    return caml_call2(Base_List[6], sexp_of_a, _x_);
   }
   if(typeof Ppx_inline_test_lib[3] !== "number"){
    var
     Ppx_expect_test_block =
       caml_call1(Ppx_expect_runtime_Test_block[1], Expect_test_config),
     _a_ =
       function(param){
        var
         _u_ = sexp_of_t$0(Base[136], x_010),
         _v_ = caml_call1(Base[85][16], _u_);
        caml_call1(Stdlib[46], _v_);
        var _w_ = caml_call1(Ppx_expect_runtime_Types[4][1], 3);
        return caml_call1(Ppx_expect_test_block[2], _w_);
       },
     _d_ =
       caml_call3
        (Ppx_expect_runtime_Test_node[1][1],
         [0, Ppx_expect_runtime_Types[1][1]],
         _c_,
         _b_),
     _e_ = [0, [0, caml_call1(Ppx_expect_runtime_Types[4][1], 3), _d_], 0],
     _f_ = caml_call1(Ppx_expect_runtime_Types[4][1], 5),
     _g_ = caml_call1(Ppx_expect_runtime_Types[4][1], 4);
    caml_call14
     (Ppx_expect_test_block[3],
      cst_reversed_list_src_reversed,
      32,
      _j_,
      _i_,
      _h_,
      [0, Ppx_expect_runtime_Types[1][1]],
      0,
      _g_,
      _f_,
      0,
      0,
      Inline_test_config,
      _e_,
      _a_);
   }
   var With_rev_sexp_of = [0, sexp_of_t$0];
   caml_call1(Ppx_inline_test_lib[7], cst_reversed_list);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Reversed_list);
   var
    Reversed_list =
      [0,
       equal,
       of_list_rev,
       rev,
       rev_append,
       rev_map,
       rev_filter_map,
       is_empty,
       length,
       With_sexp_of,
       With_rev_sexp_of];
   runtime.caml_register_global(33, Reversed_list, cst_Reversed_list$0);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLjAsImZpbGUiOiJyZXZlcnNlZF9saXN0LmNtYS5qcyIsInNvdXJjZVJvb3QiOiIiLCJuYW1lcyI6WyJ4XzAxMCIsInhfMDA5IiwiZXF1YWwiLCJjbXBfYSIsImFfMDAxIiwiYl8wMDIiLCJjbXBfYSQwIiwiYV8wMDEkMCIsImJfMDAyJDAiLCJiXzAwNiIsImJfMDA0IiwiYV8wMDUiLCJhXzAwMyIsImNtcF9hJDIiLCJhXzAwNyIsImJfMDA4IiwiY21wX2EkMSIsIm9mX2xpc3RfcmV2IiwicmV2IiwicmV2X2FwcGVuZCIsInJldl9tYXAiLCJyZXZfZmlsdGVyX21hcCIsImlzX2VtcHR5IiwibGVuZ3RoIiwic2V4cF9vZl90Iiwic2V4cF9vZl9hIiwidCIsInNleHBfb2ZfdCQwIl0sInNvdXJjZXMiOlsiL1VzZXJzL3R5bGFubW9yYW4vLm9wYW0vNS4xLjEvbGliL2NvcmVfa2VybmVsL3JldmVyc2VkX2xpc3QvcmV2ZXJzZWRfbGlzdC5tbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Rzs7Ozs7Rzs7Ozs7Rzs7Ozs7Rzs7Ozs7Ozs7OztJQWdDNERBO0lBWEFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FyQjVELFNBQUFDLE1BQUFDLE9BQUFDLE9BQUFDO0lBQUEsSUFBQUMsVUFBQUgsT0FBQUksVUFBQUgsT0FBQUksVUFBQUg7SUFBQTtRQUFBRSxZQUFBQyxTQUFBO1VBQUFELGdCQUFBQztVQUFBQSxTQUNFO0tBQ1k7TUFGZEMsUUFBQUQ7TUFFRUUsUUFGRkY7TUFBQUcsUUFBQUo7TUFFRUssUUFGRkw7TUFFYyxNQUFBLFdBRmRELFNBRUVNLE9BQUFGO0tBQVksVUFBQTs7TUFGZEc7aUJBQUFWO2tCQUFBRyxRQUVtQlEsT0FBQUM7VUFBQSxPQUFBLFdBRm5CWixPQUVtQlcsT0FBQUM7U0FBRTtnQkFGckJUOztNQUFBVSxVQUFBSCxRQUFBUDtNQUFBQSxVQUFBVTtNQUFBVCxVQUFBSTtNQUFBSCxVQUFBQzs7R0FHa0I7O0lBSWRRO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO1lBS0VDLFVBQVVDLFdBQVVDO0lBQUksT0FBQSx5QkFBZEQsV0FBVUM7R0FBOEI7O0lBSXBEOzs7OztRQURBO2VBSEVGLHFCQUdzRHZCO1NBQW5DLE1BQUE7UUFBckI7UUFDQSxVQUFBO1FBQUEsT0FBQTtPQUFxQjtLQUFyQjtPQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBUGtCLHVCQUdoQnVCO1lBV0FHLFlBQVVGLFdBQVVDO0lBQTZCLFVBQUEsV0FyQm5EUixLQXFCc0JRO0lBQTZCLE9BQUEseUJBQXZDRDtHQUE4Qzs7SUFJMUQ7Ozs7O1FBREE7ZUFIRUUsdUJBR3NEM0I7U0FBbkMsTUFBQTtRQUFyQjtRQUNBLFVBQUE7UUFBQSxPQUFBO09BQXFCO0tBQXJCO09BQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FQc0IsMkJBR3BCMkI7Ozs7Ozs7O09BN0JOekI7T0FPSWU7T0FDQUM7T0FDQUM7T0FDQUM7T0FDQUM7T0FDQUM7T0FDQUM7Ozs7O0UiLCJzb3VyY2VzQ29udGVudCI6WyJ0eXBlICdhIHQgPSAnYSBsaXN0ID1cbiAgfCBbXVxuICB8ICggOjogKSBvZiAnYSAqICdhIHRcbltAQGRlcml2aW5nIGVxdWFsXVxuXG5vcGVuIEJhc2VcblxubGV0IG9mX2xpc3RfcmV2ID0gTGlzdC5yZXZcbmxldCByZXYgPSBMaXN0LnJldlxubGV0IHJldl9hcHBlbmQgPSBMaXN0LnJldl9hcHBlbmRcbmxldCByZXZfbWFwID0gTGlzdC5yZXZfbWFwXG5sZXQgcmV2X2ZpbHRlcl9tYXAgPSBMaXN0LnJldl9maWx0ZXJfbWFwXG5sZXQgaXNfZW1wdHkgPSBMaXN0LmlzX2VtcHR5XG5sZXQgbGVuZ3RoID0gTGlzdC5sZW5ndGhcblxubW9kdWxlIFdpdGhfc2V4cF9vZiA9IHN0cnVjdFxuICB0eXBlIG5vbnJlYyAnYSB0ID0gJ2EgdFxuXG4gIGxldCBzZXhwX29mX3Qgc2V4cF9vZl9hIHQgPSBMaXN0LnNleHBfb2ZfdCBzZXhwX29mX2EgdFxuXG4gIGxldCVleHBlY3RfdGVzdCBfID1cbiAgICBTdGRsaWIucHJpbnRfZW5kbGluZSAoU2V4cC50b19zdHJpbmcgWyVzZXhwIChbIDE7IDIgXSA6IGludCB0KV0pO1xuICAgIFslZXhwZWN0IHt8ICgxIDIpIHx9XVxuICA7O1xuZW5kXG5cbm1vZHVsZSBXaXRoX3Jldl9zZXhwX29mID0gc3RydWN0XG4gIHR5cGUgbm9ucmVjICdhIHQgPSAnYSB0XG5cbiAgbGV0IHNleHBfb2ZfdCBzZXhwX29mX2EgdCA9IExpc3Quc2V4cF9vZl90IHNleHBfb2ZfYSAocmV2IHQpXG5cbiAgbGV0JWV4cGVjdF90ZXN0IF8gPVxuICAgIFN0ZGxpYi5wcmludF9lbmRsaW5lIChTZXhwLnRvX3N0cmluZyBbJXNleHAgKFsgMTsgMiBdIDogaW50IHQpXSk7XG4gICAgWyVleHBlY3Qge3wgKDIgMSkgfH1dXG4gIDs7XG5lbmRcbiJdfQ==
