// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Inline_css__
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    Inline_css = [0],
    Inline_css$0 = [0, Inline_css];
   runtime.caml_register_global(0, Inline_css$0, "Inline_css__");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Inline_css__Testing_strategy
//# unitInfo: Requires: Core__Or_error, Core__String, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime, Reversed_list
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Inline_css_Testing_strateg$0 = "Inline_css__Testing_strategy",
    cst_inline_css$0 = "inline_css";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    name = "testing-strategy",
    Reversed_list = global_data.Reversed_list,
    Core_String = global_data.Core__String,
    Core_Or_error = global_data.Core__Or_error,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Inline_css_Testing_strateg$0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_inline_css$0);
   caml_call1(Ppx_expect_runtime[1][1], "inline_css/src/testing_strategy.ml");
   caml_call2(Ppx_inline_test_lib[6], cst_inline_css$0, "testing_strategy.ml");
   var
    cst_inline_css = cst_inline_css$0,
    cst_Inline_css_Testing_strateg = cst_Inline_css_Testing_strateg$0;
   function initialize(param){return caml_call1(Core_Or_error[30], [0, 0]);}
   function update(t, s){t[1] = [0, s, t[1]]; return 0;}
   function dump_testing_state(t){
    var _a_ = caml_call1(Reversed_list[3], t[1]);
    return caml_call2(Core_String[109], 0, _a_);
   }
   var For_testing = [0, dump_testing_state];
   caml_call1(Ppx_inline_test_lib[7], cst_inline_css);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Inline_css_Testing_strateg);
   var
    Inline_css_Testing_strategy = [0, name, initialize, update, For_testing];
   runtime.caml_register_global
    (15, Inline_css_Testing_strategy, cst_Inline_css_Testing_strateg$0);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Inline_css__Style_element_strategy
//# unitInfo: Requires: Core, Core__Or_error, Js_of_ocaml__Dom_html, Js_of_ocaml__Js, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime, Ppx_string_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Inline_css_Style_element_s$0 = "Inline_css__Style_element_strategy",
    cst_inline_css$0 = "inline_css",
    caml_jsstring_of_string = runtime.caml_jsstring_of_string,
    caml_wrap_exception = runtime.caml_wrap_exception;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    undef = undefined,
    global_data = runtime.caml_get_global_data(),
    name = "<style> element inside <head> element",
    parent_selector = "head",
    name$0 = "<style> element inside <body> element",
    parent_selector$0 = "body",
    name$1 = "any element inside the document",
    parent_selector$1 = "*",
    Ppx_string_runtime = global_data.Ppx_string_runtime,
    Js_of_ocaml_Dom_html = global_data.Js_of_ocaml__Dom_html,
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    Core_Or_error = global_data.Core__Or_error,
    Core = global_data.Core,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Inline_css_Style_element_s$0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_inline_css$0);
   caml_call1
    (Ppx_expect_runtime[1][1], "inline_css/src/style_element_strategy.ml");
   caml_call2
    (Ppx_inline_test_lib[6], cst_inline_css$0, "style_element_strategy.ml");
   var
    cst_has_an_opauque_testing_sta = " has an opauque testing state",
    cst_not_found_in_document = " not found in document",
    cst_inline_css = cst_inline_css$0,
    cst_Inline_css_Style_element_s = cst_Inline_css_Style_element_s$0;
   function Make(T){
    var name = T[1], parent_selector = T[2];
    function make_style_element(param){
     return caml_call1(Js_of_ocaml_Dom_html[34], Js_of_ocaml_Dom_html[2]);
    }
    function update(t1, content){
     var t0 = caml_jsstring_of_string(content);
     return t1.innerText = t0;
    }
    function initialize(param){
     var
      parent =
        Js_of_ocaml_Dom_html[2].querySelector
         (caml_jsstring_of_string(parent_selector)),
      match = caml_call1(Js_of_ocaml_Js[5][10], parent);
     if(! match){
      var
       _c_ = caml_call2(Core[18], parent_selector, cst_not_found_in_document);
      return caml_call1(Core_Or_error[46], _c_);
     }
     var parent$0 = match[1];
     try{
      var style_element = make_style_element(0);
      parent$0.appendChild(style_element);
      var _b_ = [0, style_element];
      return _b_;
     }
     catch(exn$0){
      var exn = caml_wrap_exception(exn$0);
      return caml_call2(Core_Or_error[41], 0, exn);
     }
    }
    function dump_testing_state(param){
     var
      _a_ =
        [0,
         caml_call1(Ppx_string_runtime[1][2], cst_has_an_opauque_testing_sta),
         0];
     return caml_call1(Ppx_string_runtime[1][4], [0, T[1], _a_]);
    }
    var For_testing = [0, dump_testing_state];
    return [0, name, , , update, initialize, For_testing];
   }
   var
    Into_head = Make([0, name, parent_selector]),
    Into_body = Make([0, name$0, parent_selector$0]),
    Into_root_element = Make([0, name$1, parent_selector$1]);
   caml_call1(Ppx_inline_test_lib[7], cst_inline_css);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Inline_css_Style_element_s);
   var
    Inline_css_Style_element_strat =
      [0,
       [0, Into_head[1], Into_head[5], Into_head[4], Into_head[6]],
       [0, Into_body[1], Into_body[5], Into_body[4], Into_body[6]],
       [0,
        Into_root_element[1],
        Into_root_element[5],
        Into_root_element[4],
        Into_root_element[6]]];
   runtime.caml_register_global
    (27, Inline_css_Style_element_strat, cst_Inline_css_Style_element_s$0);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Inline_css__Strategy_intf
//# unitInfo: Requires: Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Inline_css_Strategy_intf = "Inline_css__Strategy_intf",
    cst_inline_css = "inline_css";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Inline_css_Strategy_intf);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_inline_css);
   caml_call1(Ppx_expect_runtime[1][1], "inline_css/src/strategy_intf.ml");
   caml_call2(Ppx_inline_test_lib[6], cst_inline_css, "strategy_intf.ml");
   caml_call1(Ppx_inline_test_lib[7], cst_inline_css);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Inline_css_Strategy_intf);
   var Inline_css_Strategy_intf = [0];
   runtime.caml_register_global
    (11, Inline_css_Strategy_intf, cst_Inline_css_Strategy_intf);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Inline_css__Constructed_stylesheet_strategy
//# unitInfo: Requires: Core__Or_error, Js_of_ocaml__Js, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Inline_css_Constructed_sty$0 =
      "Inline_css__Constructed_stylesheet_strategy",
    cst_inline_css$0 = "inline_css",
    caml_wrap_exception = runtime.caml_wrap_exception;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    name = "constructed stylesheet",
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    Core_Or_error = global_data.Core__Or_error,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Inline_css_Constructed_sty$0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_inline_css$0);
   caml_call1
    (Ppx_expect_runtime[1][1],
     "inline_css/src/constructed_stylesheet_strategy.ml");
   caml_call2
    (Ppx_inline_test_lib[6],
     cst_inline_css$0,
     "constructed_stylesheet_strategy.ml");
   var t0 = Js_of_ocaml_Js[52][1], t = t0.CSSStyleSheet;
   function append(style_sheet){
    document.adoptedStyleSheets =
     Array.prototype.concat.apply(document.adoptedStyleSheets, [style_sheet]);
   }
   function delete_stylesheet(style_sheet){
    document.adoptedStyleSheets =
     document.adoptedStyleSheets.filter(x=>! (x === style_sheet));
   }
   var
    cst_constructed_stylesheet_str =
      "constructed-stylesheet-strategy has an opaque state",
    cst_window_CSSStyleSheet_doesn = "window.CSSStyleSheet doesn't exist",
    cst_inline_css = cst_inline_css$0,
    cst_Inline_css_Constructed_sty = cst_Inline_css_Constructed_sty$0;
   function initialize(param){
    var match = caml_call1(Js_of_ocaml_Js[6][10], t);
    if(! match)
     return caml_call1(Core_Or_error[46], cst_window_CSSStyleSheet_doesn);
    var stylesheet_constructor = match[1];
    try{
     var style_sheet = new stylesheet_constructor;
     caml_call1(append, style_sheet);
     var _a_ = [0, style_sheet];
     return _a_;
    }
    catch(exn$0){
     var exn = caml_wrap_exception(exn$0);
     return caml_call2(Core_Or_error[41], 0, exn);
    }
   }
   function update(t, content){
    return t.replaceSync(runtime.caml_jsstring_of_string(content));
   }
   function dump_testing_state(param){return cst_constructed_stylesheet_str;}
   var For_testing = [0, dump_testing_state];
   caml_call1(Ppx_inline_test_lib[7], cst_inline_css);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Inline_css_Constructed_sty);
   var
    Inline_css_Constructed_stylesh =
      [0, name, initialize, update, For_testing, delete_stylesheet];
   runtime.caml_register_global
    (20, Inline_css_Constructed_stylesh, cst_Inline_css_Constructed_sty$0);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Inline_css__Inline_css_dynamic
//# unitInfo: Requires: Core, Core__Error, Inline_css__Constructed_stylesheet_strategy, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime, Sexplib0__Sexp_conv, Virtual_dom__Hooks, Virtual_dom__Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Inline_css_Inline_css_dyna$0 = "Inline_css__Inline_css_dynamic",
    cst_inline_css$0 = "inline_css";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst = "",
    Virtual_dom_Vdom = global_data.Virtual_dom__Vdom,
    Inline_css_Constructed_stylesh =
      global_data.Inline_css__Constructed_stylesheet_strategy,
    Core_Error = global_data.Core__Error,
    Sexplib0_Sexp_conv = global_data.Sexplib0__Sexp_conv,
    Core = global_data.Core,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Virtual_dom_Hooks = global_data.Virtual_dom__Hooks;
   caml_call1(Ppx_module_timer_runtime[4], cst_Inline_css_Inline_css_dyna$0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_inline_css$0);
   caml_call1
    (Ppx_expect_runtime[1][1], "inline_css/src/inline_css_dynamic.ml");
   caml_call2
    (Ppx_inline_test_lib[6], cst_inline_css$0, "inline_css_dynamic.ml");
   var
    sexp_of_t = Core[558],
    equal = Core[553],
    combine = Core[18],
    cst_inline_css_dynamic = "inline-css-dynamic",
    _a_ = [0, "error"],
    cst_Error_while_attempting_to_ =
      "Error while attempting to create CSSStyleSheet. Styles may not load.",
    cst_inline_css = cst_inline_css$0,
    cst_Inline_css_Inline_css_dyna = cst_Inline_css_Inline_css_dyna$0;
   function iter(t, f){
    if(0 === t[0]){var stylesheet = t[1]; return caml_call1(f, stylesheet);}
    var
     error = t[1],
     _c_ = [0, [1, [0, _a_, [0, caml_call1(Core_Error[9], error), 0]]], 0],
     _d_ =
       [1,
        [0,
         caml_call1(Sexplib0_Sexp_conv[7], cst_Error_while_attempting_to_),
         _c_]];
    return caml_call2(Core[256], 0, _d_);
   }
   function init(string, element){
    var state = caml_call1(Inline_css_Constructed_stylesh[2], 0);
    iter
     (state,
      function(stylesheet){
       return caml_call2
               (Inline_css_Constructed_stylesh[3], stylesheet, string);
      });
    return state;
   }
   var on_mount = 327963705;
   function update(old_input, new_input, state, element){
    if(old_input !== new_input && ! caml_call2(equal, old_input, new_input))
     return iter
             (state,
              function(stylesheet){
               return caml_call2
                       (Inline_css_Constructed_stylesh[3], stylesheet, new_input);
              });
    return 0;
   }
   function destroy(input, state, element){
    return iter
            (state,
             function(stylesheet){
              caml_call2(Inline_css_Constructed_stylesh[3], stylesheet, cst);
              return caml_call1(Inline_css_Constructed_stylesh[5], stylesheet);
             });
   }
   var
    Hook =
      caml_call1
       (Virtual_dom_Hooks[3],
        [0, [0], [0, sexp_of_t, combine], init, on_mount, update, destroy]);
   function attr(s){
    var _b_ = caml_call1(Hook[1], s);
    return caml_call2(Virtual_dom_Vdom[1][7], cst_inline_css_dynamic, _b_);
   }
   caml_call1(Ppx_inline_test_lib[7], cst_inline_css);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Inline_css_Inline_css_dyna);
   var Inline_css_Inline_css_dynamic = [0, attr];
   runtime.caml_register_global
    (21, Inline_css_Inline_css_dynamic, cst_Inline_css_Inline_css_dyna$0);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Inline_css
//# unitInfo: Requires: Base__Or_error, CamlinternalLazy, Core, Core__Error, Core__Hash_set, Core__Lazy, Core__Option, Core__Or_error, Core__String, Inline_css__Constructed_stylesheet_strategy, Inline_css__Style_element_strategy, Inline_css__Testing_strategy, Js_of_ocaml__Dom, Js_of_ocaml__Dom_html, Js_of_ocaml__Js, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime, Ppx_string_runtime, Reversed_list
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Inline_css$0 = "Inline_css",
    cst_inline_css$0 = "inline_css",
    caml_obj_tag = runtime.caml_obj_tag,
    caml_string_notequal = runtime.caml_string_notequal;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call6(f, a0, a1, a2, a3, a4, a5){
    return (f.l >= 0 ? f.l : f.l = f.length) == 6
            ? f(a0, a1, a2, a3, a4, a5)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    empty = [0, 0, 0],
    Core = global_data.Core,
    CamlinternalLazy = global_data.CamlinternalLazy,
    Core_Error = global_data.Core__Error,
    Ppx_string_runtime = global_data.Ppx_string_runtime,
    Core_Lazy = global_data.Core__Lazy,
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    Js_of_ocaml_Dom_html = global_data.Js_of_ocaml__Dom_html,
    Core_Or_error = global_data.Core__Or_error,
    Base_Or_error = global_data.Base__Or_error,
    Inline_css_Testing_strategy = global_data.Inline_css__Testing_strategy,
    Core_Hash_set = global_data.Core__Hash_set,
    Core_String = global_data.Core__String,
    Reversed_list = global_data.Reversed_list,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Inline_css_Style_element_strat =
      global_data.Inline_css__Style_element_strategy,
    Inline_css_Constructed_stylesh =
      global_data.Inline_css__Constructed_stylesheet_strategy,
    Core_Option = global_data.Core__Option,
    Js_of_ocaml_Dom = global_data.Js_of_ocaml__Dom;
   caml_call1(Ppx_module_timer_runtime[4], cst_Inline_css$0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_inline_css$0);
   caml_call1(Ppx_expect_runtime[1][1], "inline_css/src/inline_css.ml");
   caml_call2(Ppx_inline_test_lib[6], cst_inline_css$0, "inline_css.ml");
   var
    all_css = [0, caml_call3(Core_String[165][3], 0, 0, 0), empty],
    cst_no_strategy_selected_error = "no strategy selected. error: ",
    _a_ = [0, "\n"],
    cst_inline_css = cst_inline_css$0,
    cst_Inline_css = cst_Inline_css$0;
   function to_string(param){
    var t = all_css[2];
    if(caml_call1(Reversed_list[7], t[2]))
     var match = [0, t[1], t];
    else
     var
      _t_ = caml_call1(Reversed_list[3], t[2]),
      joined = caml_call2(Core[156], t[1], _t_),
      match = [0, joined, [0, joined, 0]];
    var items = match[2], joined$0 = match[1];
    all_css[2] = items;
    return caml_call2(Core_String[46], _a_, joined$0);
   }
   var
    strategies =
      [0,
       [0,
        Inline_css_Constructed_stylesh[1],
        Inline_css_Constructed_stylesh[2],
        Inline_css_Constructed_stylesh[3],
        Inline_css_Constructed_stylesh[4]],
       [0,
        Inline_css_Style_element_strat[1],
        [0,
         Inline_css_Style_element_strat[2],
         [0, Inline_css_Style_element_strat[3], 0]]]],
    selected =
      [246,
       function(_o_){
        function maybe_initialize(Strategy){
         function _p_(state){return [0, state, Strategy];}
         var
          _q_ = Strategy[1],
          _r_ = caml_call1(Strategy[2], 0),
          _s_ = caml_call2(Core_Or_error[48], _r_, _q_);
         return caml_call2(Base_Or_error[28][4][3], _s_, _p_);
        }
        return Core[628]
                ? maybe_initialize(Inline_css_Testing_strategy)
                : caml_call2(Core_Or_error[60], strategies, maybe_initialize);
       }];
   function install_in_dom(param){
    var _l_ = caml_obj_tag(selected);
    a:
    if(250 === _l_)
     var match = selected[1];
    else{
     if(246 !== _l_ && 244 !== _l_){var match = selected; break a;}
     var match = caml_call1(CamlinternalLazy[2], selected);
    }
    if(0 === match[0]){
     var
      match$0 = match[1],
      M = match$0[2],
      state = match$0[1],
      _m_ = to_string(0);
     return caml_call2(M[3], state, _m_);
    }
    var e = match[1], _n_ = caml_call1(Core_Error[9], e);
    return caml_call2(Core[257], 0, _n_);
   }
   function _b_(param){
    var t0 = Js_of_ocaml_Dom_html[2];
    return runtime.caml_string_of_jsstring(t0.readyState);
   }
   var ready_state = caml_call1(Core_Option[56], _b_);
   if(ready_state){
    var _c_ = ready_state[1];
    a:
    {
     if
      (caml_string_notequal(_c_, "complete")
       && caml_string_notequal(_c_, "interactive")){
      caml_string_notequal(_c_, "loading");
      var
       _d_ = function(param){install_in_dom(0); return Js_of_ocaml_Js[7];},
       _e_ = caml_call1(Js_of_ocaml_Dom[10], _d_);
      caml_call6
       (Js_of_ocaml_Dom_html[16],
        Js_of_ocaml_Dom_html[8],
        Js_of_ocaml_Dom_html[15][54],
        [0, Js_of_ocaml_Js[8]],
        [0, Js_of_ocaml_Js[7]],
        [0, Js_of_ocaml_Js[7]],
        _e_);
      break a;
     }
     install_in_dom(0);
    }
   }
   function update_strategy_from_state(param){
    var match = caml_call1(Core_Lazy[41], selected);
    if(! match) return 0;
    var _j_ = match[1];
    if(0 !== _j_[0]) return 0;
    var
     match$0 = _j_[1],
     M = match$0[2],
     state = match$0[1],
     _k_ = to_string(0);
    return caml_call2(M[3], state, _k_);
   }
   function append(item){
    var already_appended = caml_call2(Core_Hash_set[20], all_css[1], item);
    if(already_appended)
     var already_appended$0 = 615083424;
    else{
     caml_call2(Core_Hash_set[22], all_css[1], item);
     var t = all_css[2];
     all_css[2] = [0, t[1], [0, item, t[2]]];
     var already_appended$0 = 72262571;
    }
    return 615083424 <= already_appended$0 ? 0 : update_strategy_from_state(0);
   }
   function prepend(item){
    var t = all_css[2];
    all_css[2] = [0, [0, item, t[1]], t[2]];
    return update_strategy_from_state(0);
   }
   function to_string$0(param){return to_string(0);}
   function with_strategy(f){
    var _g_ = caml_obj_tag(selected);
    a:
    if(250 === _g_)
     var match = selected[1];
    else{
     if(246 !== _g_ && 244 !== _g_){var match = selected; break a;}
     var match = caml_call1(CamlinternalLazy[2], selected);
    }
    if(0 === match[0]){
     var strategy = match[1];
     return caml_call1(f, strategy);
    }
    var
     error = match[1],
     error$0 = caml_call1(Core_Error[12], error),
     _h_ =
       [0,
        caml_call1(Ppx_string_runtime[1][2], cst_no_strategy_selected_error),
        [0, error$0, 0]],
     _i_ = caml_call1(Ppx_string_runtime[1][4], _h_);
    return caml_call1(Core[6], _i_);
   }
   function strategy_name(param){
    return with_strategy(function(param){var M = param[2]; return M[1];});
   }
   function dump_strategy_state(param){
    return with_strategy
            (function(param){
              var
               M = param[2],
               state = param[1],
               _f_ = caml_call1(M[4][1], state);
              return caml_call1(Core[32], _f_);
             });
   }
   var Private = [0, append, prepend];
   caml_call1(Ppx_inline_test_lib[7], cst_inline_css);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Inline_css);
   var
    Inline_css =
      [0, Private, [0, to_string$0, strategy_name, dump_strategy_state]];
   runtime.caml_register_global(35, Inline_css, cst_Inline_css$0);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLjAsImZpbGUiOiJpbmxpbmVfY3NzLmNtYS5qcyIsInNvdXJjZVJvb3QiOiIiLCJuYW1lcyI6WyJuYW1lIiwiaW5pdGlhbGl6ZSIsInVwZGF0ZSIsInQiLCJzIiwiZHVtcF90ZXN0aW5nX3N0YXRlIiwicGFyZW50X3NlbGVjdG9yIiwibmFtZSQwIiwicGFyZW50X3NlbGVjdG9yJDAiLCJuYW1lJDEiLCJwYXJlbnRfc2VsZWN0b3IkMSIsIm1ha2Vfc3R5bGVfZWxlbWVudCIsImNvbnRlbnQiLCJwYXJlbnQiLCJwYXJlbnQkMCIsInN0eWxlX2VsZW1lbnQiLCJleG4kMCIsImV4biIsImFwcGVuZCIsImRlbGV0ZV9zdHlsZXNoZWV0Iiwic3R5bGVzaGVldF9jb25zdHJ1Y3RvciIsInN0eWxlX3NoZWV0Iiwic2V4cF9vZl90IiwiZXF1YWwiLCJjb21iaW5lIiwiaXRlciIsImYiLCJzdHlsZXNoZWV0IiwiZXJyb3IiLCJpbml0Iiwic3RyaW5nIiwiZWxlbWVudCIsInN0YXRlIiwib25fbW91bnQiLCJvbGRfaW5wdXQiLCJuZXdfaW5wdXQiLCJkZXN0cm95IiwiaW5wdXQiLCJhdHRyIiwiZW1wdHkiLCJhbGxfY3NzIiwidG9fc3RyaW5nIiwiam9pbmVkIiwiaXRlbXMiLCJqb2luZWQkMCIsInN0cmF0ZWdpZXMiLCJzZWxlY3RlZCIsIm1heWJlX2luaXRpYWxpemUiLCJTdHJhdGVneSIsImluc3RhbGxfaW5fZG9tIiwiTSIsImUiLCJyZWFkeV9zdGF0ZSIsInVwZGF0ZV9zdHJhdGVneV9mcm9tX3N0YXRlIiwiaXRlbSIsImFscmVhZHlfYXBwZW5kZWQiLCJhbHJlYWR5X2FwcGVuZGVkJDAiLCJwcmVwZW5kIiwidG9fc3RyaW5nJDAiLCJ3aXRoX3N0cmF0ZWd5Iiwic3RyYXRlZ3kiLCJlcnJvciQwIiwic3RyYXRlZ3lfbmFtZSIsImR1bXBfc3RyYXRlZ3lfc3RhdGUiXSwic291cmNlcyI6WyIvVXNlcnMvdHlsYW5tb3Jhbi8ub3BhbS81LjEuMS9saWIvcHB4X2Nzcy9pbmxpbmVfY3NzL2lubGluZV9jc3NfXy5tbCIsIi9Vc2Vycy90eWxhbm1vcmFuLy5vcGFtLzUuMS4xL2xpYi9wcHhfY3NzL2lubGluZV9jc3MvdGVzdGluZ19zdHJhdGVneS5tbCIsIi9Vc2Vycy90eWxhbm1vcmFuLy5vcGFtLzUuMS4xL2xpYi9wcHhfY3NzL2lubGluZV9jc3Mvc3R5bGVfZWxlbWVudF9zdHJhdGVneS5tbCIsIi9Vc2Vycy90eWxhbm1vcmFuLy5vcGFtLzUuMS4xL2xpYi9wcHhfY3NzL2lubGluZV9jc3MvY29uc3RydWN0ZWRfc3R5bGVzaGVldF9zdHJhdGVneS5tbCIsIi9Vc2Vycy90eWxhbm1vcmFuLy5vcGFtLzUuMS4xL2xpYi9wcHhfY3NzL2lubGluZV9jc3MvaW5saW5lX2Nzc19keW5hbWljLm1sIiwiL1VzZXJzL3R5bGFubW9yYW4vLm9wYW0vNS4xLjEvbGliL3BweF9jc3MvaW5saW5lX2Nzcy9pbmxpbmVfY3NzLm1sIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0dBaUJzQjs7SUFBQTs7OztFOzs7Ozs7Ozs7Ozs7Rzs7Ozs7Rzs7Ozs7OztJQ2JsQkE7Ozs7Ozs7Ozs7Ozs7Ozs7WUFDQUMsa0JBQWdCLE9BQWdCLHNDQUFzQjtZQUN0REMsT0FBbUNDLEdBQUVDLEdBQUZELFdBQUVDLEdBQUZELGdCQUFtQjtZQUdwREUsbUJBQW1CRjtJQUFJLFVBQUEsNkJBQUpBO0lBQUksT0FBQTtHQUEyQztHQURuRCxzQkFDZkU7Ozs7OztzQ0FMRkwsTUFDQUMsWUFDQUM7Ozs7RTs7Ozs7Ozs7Ozs7Ozs7Rzs7Ozs7Rzs7Ozs7Ozs7SUM0QkVGO0lBQ0FNO0lBSUFDO0lBQ0FDO0lBSUFDO0lBQ0FDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztRQXpDSlYsYUFDQU07YUFPSUs7S0FBd0IsT0FBQTtJQUFzQzthQUM5RFQsV0FBU1U7S0FBMkIsU0FBQSx3QkFBM0JBOztJQUE0QzthQUVyRFg7S0FDRjtNQUFJWTtRQUFTO1VBQWlDLHdCQVhoRFA7TUFZUSxRQUFBLGtDQURGTzs7TUFFNEI7YUFBQSxxQkFibENQO01BYWtDLE9BQUE7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LFFBT0F1Qzs7Ozs7Ozt1QkFNRUMsYUFVQUksZUFFQUM7OztFIiwic291cmNlc0NvbnRlbnQiOlsiKCogZ2VuZXJhdGVkIGJ5IGR1bmUgKilcblxuKCoqIEBjYW5vbmljYWwgSW5saW5lX2Nzcy5Db25zdHJ1Y3RlZF9zdHlsZXNoZWV0X3N0cmF0ZWd5ICopXG5tb2R1bGUgQ29uc3RydWN0ZWRfc3R5bGVzaGVldF9zdHJhdGVneSA9IElubGluZV9jc3NfX0NvbnN0cnVjdGVkX3N0eWxlc2hlZXRfc3RyYXRlZ3lcblxuKCoqIEBjYW5vbmljYWwgSW5saW5lX2Nzcy5JbmxpbmVfY3NzX2R5bmFtaWMgKilcbm1vZHVsZSBJbmxpbmVfY3NzX2R5bmFtaWMgPSBJbmxpbmVfY3NzX19JbmxpbmVfY3NzX2R5bmFtaWNcblxuKCoqIEBjYW5vbmljYWwgSW5saW5lX2Nzcy5TdHJhdGVneV9pbnRmICopXG5tb2R1bGUgU3RyYXRlZ3lfaW50ZiA9IElubGluZV9jc3NfX1N0cmF0ZWd5X2ludGZcblxuKCoqIEBjYW5vbmljYWwgSW5saW5lX2Nzcy5TdHlsZV9lbGVtZW50X3N0cmF0ZWd5ICopXG5tb2R1bGUgU3R5bGVfZWxlbWVudF9zdHJhdGVneSA9IElubGluZV9jc3NfX1N0eWxlX2VsZW1lbnRfc3RyYXRlZ3lcblxuKCoqIEBjYW5vbmljYWwgSW5saW5lX2Nzcy5UZXN0aW5nX3N0cmF0ZWd5ICopXG5tb2R1bGUgVGVzdGluZ19zdHJhdGVneSA9IElubGluZV9jc3NfX1Rlc3Rpbmdfc3RyYXRlZ3lcblxubW9kdWxlIElubGluZV9jc3NfXyA9IHN0cnVjdCBlbmRcbltAQGRlcHJlY2F0ZWQgXCJ0aGlzIG1vZHVsZSBpcyBzaGFkb3dlZFwiXVxuIiwib3BlbiEgQ29yZVxuXG50eXBlIHQgPSBzdHJpbmcgUmV2ZXJzZWRfbGlzdC50IHJlZlxuXG5sZXQgbmFtZSA9IFwidGVzdGluZy1zdHJhdGVneVwiXG5sZXQgaW5pdGlhbGl6ZSAoKSA9IE9yX2Vycm9yLnJldHVybiAocmVmIFJldmVyc2VkX2xpc3QuW10pXG5sZXQgdXBkYXRlIDogdCAtPiBzdHJpbmcgLT4gdW5pdCA9IGZ1biB0IHMgLT4gdCA6PSBzIDo6ICF0XG5cbm1vZHVsZSBGb3JfdGVzdGluZyA9IHN0cnVjdFxuICBsZXQgZHVtcF90ZXN0aW5nX3N0YXRlIHQgPSBSZXZlcnNlZF9saXN0LnJldiAhdCB8PiBTdHJpbmcuY29uY2F0X2xpbmVzXG5lbmRcbiIsIm9wZW4hIENvcmVcbm9wZW4gSnNfb2Zfb2NhbWxcblxubW9kdWxlIE1ha2UgKFQgOiBzaWdcbiAgdmFsIG5hbWUgOiBzdHJpbmdcbiAgdmFsIHBhcmVudF9zZWxlY3RvciA6IHN0cmluZ1xuZW5kKSA9XG5zdHJ1Y3RcbiAgaW5jbHVkZSBUXG5cbiAgdHlwZSB0ID0gRG9tX2h0bWwuc3R5bGVFbGVtZW50IEpzLnRcblxuICBsZXQgbWFrZV9zdHlsZV9lbGVtZW50ICgpID0gRG9tX2h0bWwuY3JlYXRlU3R5bGUgRG9tX2h0bWwuZG9jdW1lbnRcbiAgbGV0IHVwZGF0ZSB0IGNvbnRlbnQgPSB0IyMuaW5uZXJUZXh0IDo9IEpzLnN0cmluZyBjb250ZW50XG5cbiAgbGV0IGluaXRpYWxpemUgKCkgPVxuICAgIGxldCBwYXJlbnQgPSBEb21faHRtbC5kb2N1bWVudCMjcXVlcnlTZWxlY3RvciAoSnMuc3RyaW5nIHBhcmVudF9zZWxlY3RvcikgaW5cbiAgICBtYXRjaCBKcy5PcHQudG9fb3B0aW9uIHBhcmVudCB3aXRoXG4gICAgfCBOb25lIC0+IE9yX2Vycm9yLmVycm9yX3N0cmluZyAocGFyZW50X3NlbGVjdG9yIF4gXCIgbm90IGZvdW5kIGluIGRvY3VtZW50XCIpXG4gICAgfCBTb21lIHBhcmVudCAtPlxuICAgICAgKHRyeVxuICAgICAgICAgbGV0IHN0eWxlX2VsZW1lbnQgPSBtYWtlX3N0eWxlX2VsZW1lbnQgKCkgaW5cbiAgICAgICAgIGlnbm9yZSAocGFyZW50IyNhcHBlbmRDaGlsZCAoc3R5bGVfZWxlbWVudCA6PiBEb20ubm9kZSBKcy50KSA6IERvbS5ub2RlIEpzLnQpO1xuICAgICAgICAgT2sgc3R5bGVfZWxlbWVudFxuICAgICAgIHdpdGhcbiAgICAgICB8IGV4biAtPiBPcl9lcnJvci5vZl9leG4gZXhuKVxuICA7O1xuXG4gIG1vZHVsZSBGb3JfdGVzdGluZyA9IHN0cnVjdFxuICAgIGxldCBkdW1wX3Rlc3Rpbmdfc3RhdGUgXyA9IFslc3RyaW5nIFwiJXtULm5hbWV9IGhhcyBhbiBvcGF1cXVlIHRlc3Rpbmcgc3RhdGVcIl1cbiAgZW5kXG5lbmRcblxubW9kdWxlIEludG9faGVhZCA9IE1ha2UgKHN0cnVjdFxuICBsZXQgbmFtZSA9IFwiPHN0eWxlPiBlbGVtZW50IGluc2lkZSA8aGVhZD4gZWxlbWVudFwiXG4gIGxldCBwYXJlbnRfc2VsZWN0b3IgPSBcImhlYWRcIlxuZW5kKVxuXG5tb2R1bGUgSW50b19ib2R5ID0gTWFrZSAoc3RydWN0XG4gIGxldCBuYW1lID0gXCI8c3R5bGU+IGVsZW1lbnQgaW5zaWRlIDxib2R5PiBlbGVtZW50XCJcbiAgbGV0IHBhcmVudF9zZWxlY3RvciA9IFwiYm9keVwiXG5lbmQpXG5cbm1vZHVsZSBJbnRvX3Jvb3RfZWxlbWVudCA9IE1ha2UgKHN0cnVjdFxuICBsZXQgbmFtZSA9IFwiYW55IGVsZW1lbnQgaW5zaWRlIHRoZSBkb2N1bWVudFwiXG4gIGxldCBwYXJlbnRfc2VsZWN0b3IgPSBcIipcIlxuZW5kKVxuIiwib3BlbiEgQ29yZVxub3BlbiBKc19vZl9vY2FtbFxuXG5tb2R1bGUgU3R5bGVfc2hlZXQgPSBzdHJ1Y3RcbiAgY2xhc3MgdHlwZSB0ID0gb2JqZWN0XG4gICAgbWV0aG9kIHJlcGxhY2VTeW5jIDogSnMuanNfc3RyaW5nIEpzLnQgLT4gdW5pdCBKcy5tZXRoXG4gIGVuZFxuXG4gIGxldCB0IDogdCBKcy50IEpzLmNvbnN0ciBKcy5PcHRkZWYudCA9IEpzLlVuc2FmZS5nbG9iYWwjIy5fQ1NTU3R5bGVTaGVldFxuXG4gIGxldCBhcHBlbmQgOiB0IEpzLnQgLT4gdW5pdCA9XG4gICAgSnMuVW5zYWZlLnB1cmVfanNfZXhwclxuICAgICAge2pzfFxuICAoZnVuY3Rpb24gKHN0eWxlX3NoZWV0KSB7XG4gICAgLy8gcHVzaCBkb2Vzbid0IHdvcmsgYmVjYXVzZSB0aGlzIGZpZWxkIGlzIHJlYWxseSB3ZWlyZC5cbiAgICBkb2N1bWVudC5hZG9wdGVkU3R5bGVTaGVldHMgPVxuICAgICAgQXJyYXkucHJvdG90eXBlLmNvbmNhdC5hcHBseShkb2N1bWVudC5hZG9wdGVkU3R5bGVTaGVldHMsIFtzdHlsZV9zaGVldF0pO1xuICB9KVxufGpzfVxuICA7O1xuXG4gIGxldCBkZWxldGUgOiB0IEpzLnQgLT4gdW5pdCA9XG4gICAgSnMuVW5zYWZlLnB1cmVfanNfZXhwclxuICAgICAge2pzfFxuICAoZnVuY3Rpb24gKHN0eWxlX3NoZWV0KSB7XG4gICAgZG9jdW1lbnQuYWRvcHRlZFN0eWxlU2hlZXRzID0gZG9jdW1lbnQuYWRvcHRlZFN0eWxlU2hlZXRzLmZpbHRlcih4ID0+ICEoeCA9PT0gc3R5bGVfc2hlZXQpKVxuICB9KVxufGpzfVxuICA7O1xuZW5kXG5cbnR5cGUgdCA9IFN0eWxlX3NoZWV0LnQgSnMudFxuXG5sZXQgZGVsZXRlX3N0eWxlc2hlZXQgPSBTdHlsZV9zaGVldC5kZWxldGVcbmxldCBuYW1lID0gXCJjb25zdHJ1Y3RlZCBzdHlsZXNoZWV0XCJcblxubGV0IGluaXRpYWxpemUgKCkgPVxuICBtYXRjaCBKcy5PcHRkZWYudG9fb3B0aW9uIFN0eWxlX3NoZWV0LnQgd2l0aFxuICB8IFNvbWUgc3R5bGVzaGVldF9jb25zdHJ1Y3RvciAtPlxuICAgICh0cnlcbiAgICAgICBsZXQgc3R5bGVfc2hlZXQgPSBuZXclanMgc3R5bGVzaGVldF9jb25zdHJ1Y3RvciBpblxuICAgICAgIFN0eWxlX3NoZWV0LmFwcGVuZCBzdHlsZV9zaGVldDtcbiAgICAgICBPayBzdHlsZV9zaGVldFxuICAgICB3aXRoXG4gICAgIHwgZXhuIC0+IE9yX2Vycm9yLm9mX2V4biBleG4pXG4gIHwgTm9uZSAtPiBPcl9lcnJvci5lcnJvcl9zdHJpbmcgXCJ3aW5kb3cuQ1NTU3R5bGVTaGVldCBkb2Vzbid0IGV4aXN0XCJcbjs7XG5cbmxldCB1cGRhdGUgdCBjb250ZW50ID0gdCMjcmVwbGFjZVN5bmMgKEpzLnN0cmluZyBjb250ZW50KVxuXG5tb2R1bGUgRm9yX3Rlc3RpbmcgPSBzdHJ1Y3RcbiAgbGV0IGR1bXBfdGVzdGluZ19zdGF0ZSBfID0gXCJjb25zdHJ1Y3RlZC1zdHlsZXNoZWV0LXN0cmF0ZWd5IGhhcyBhbiBvcGFxdWUgc3RhdGVcIlxuZW5kXG4iLCJvcGVuISBDb3JlXG5vcGVuIFZpcnR1YWxfZG9tXG5cbm1vZHVsZSBJbnB1dCA9IHN0cnVjdFxuICB0eXBlIHQgPSBzdHJpbmcgW0BAZGVyaXZpbmcgc2V4cF9vZiwgZXF1YWxdXG5cbiAgbGV0IGNvbWJpbmUgPSAoIF4gKVxuZW5kXG5cbm1vZHVsZSBTdGF0ZSA9IHN0cnVjdFxuICB0eXBlIHQgPSBDb25zdHJ1Y3RlZF9zdHlsZXNoZWV0X3N0cmF0ZWd5LnQgT3JfZXJyb3IudFxuXG4gIGxldCBpdGVyICh0IDogdCkgfmYgPVxuICAgIG1hdGNoIHQgd2l0aFxuICAgIHwgRXJyb3IgZXJyb3IgLT5cbiAgICAgIHByaW50X3NcbiAgICAgICAgWyVtZXNzYWdlXG4gICAgICAgICAgXCJFcnJvciB3aGlsZSBhdHRlbXB0aW5nIHRvIGNyZWF0ZSBDU1NTdHlsZVNoZWV0LiBTdHlsZXMgbWF5IG5vdCBsb2FkLlwiXG4gICAgICAgICAgICAoZXJyb3IgOiBFcnJvci50KV1cbiAgICB8IE9rIHN0eWxlc2hlZXQgLT4gZiBzdHlsZXNoZWV0XG4gIDs7XG5lbmRcblxubW9kdWxlIFMgPSBzdHJ1Y3RcbiAgbW9kdWxlIElucHV0ID0gSW5wdXRcbiAgbW9kdWxlIFN0YXRlID0gU3RhdGVcblxuICBsZXQgaW5pdCBzdHJpbmcgX2VsZW1lbnQgPVxuICAgIGxldCBzdGF0ZSA9IENvbnN0cnVjdGVkX3N0eWxlc2hlZXRfc3RyYXRlZ3kuaW5pdGlhbGl6ZSAoKSBpblxuICAgIFN0YXRlLml0ZXIgc3RhdGUgfmY6KGZ1biBzdHlsZXNoZWV0IC0+XG4gICAgICBDb25zdHJ1Y3RlZF9zdHlsZXNoZWV0X3N0cmF0ZWd5LnVwZGF0ZSBzdHlsZXNoZWV0IHN0cmluZyk7XG4gICAgc3RhdGVcbiAgOztcblxuICBsZXQgb25fbW91bnQgPSBgRG9fbm90aGluZ1xuXG4gIGxldCB1cGRhdGUgfm9sZF9pbnB1dCB+bmV3X2lucHV0IHN0YXRlIF9lbGVtZW50ID1cbiAgICBpZiBwaHlzX2VxdWFsIG9sZF9pbnB1dCBuZXdfaW5wdXQgfHwgSW5wdXQuZXF1YWwgb2xkX2lucHV0IG5ld19pbnB1dFxuICAgIHRoZW4gKCAoKiBkbyBub3RoaW5nIGlmIHRoZSBpbnB1dHMgZG9uJ3QgY2hhbmdlICopIClcbiAgICBlbHNlXG4gICAgICBTdGF0ZS5pdGVyIHN0YXRlIH5mOihmdW4gc3R5bGVzaGVldCAtPlxuICAgICAgICBDb25zdHJ1Y3RlZF9zdHlsZXNoZWV0X3N0cmF0ZWd5LnVwZGF0ZSBzdHlsZXNoZWV0IG5ld19pbnB1dClcbiAgOztcblxuICBsZXQgZGVzdHJveSBfaW5wdXQgc3RhdGUgX2VsZW1lbnQgPVxuICAgIFN0YXRlLml0ZXIgc3RhdGUgfmY6KGZ1biBzdHlsZXNoZWV0IC0+XG4gICAgICBDb25zdHJ1Y3RlZF9zdHlsZXNoZWV0X3N0cmF0ZWd5LnVwZGF0ZSBzdHlsZXNoZWV0IFwiXCI7XG4gICAgICBDb25zdHJ1Y3RlZF9zdHlsZXNoZWV0X3N0cmF0ZWd5LmRlbGV0ZV9zdHlsZXNoZWV0IHN0eWxlc2hlZXQpXG4gIDs7XG5lbmRcblxubW9kdWxlIEhvb2sgPSBWZG9tLkF0dHIuSG9va3MuTWFrZSAoUylcblxubGV0IGF0dHIgcyA9IFZkb20uQXR0ci5jcmVhdGVfaG9vayBcImlubGluZS1jc3MtZHluYW1pY1wiIChIb29rLmNyZWF0ZSBzKVxuIiwib3BlbiEgQ29yZVxub3BlbiBKc19vZl9vY2FtbFxuXG5tb2R1bGUgUHJlcGVuZF9hbmRfYXBwZW5kX2xpc3QgOiBzaWdcbiAgKCoqIEEgbGlzdCBidWlsZGVyIHRoYXQgYWxsb3dzIGluc2VydGluZyBib3RoIGF0IHRoZSBmcm9udCBhbmQgZW5kIG9mIHRoZSBsaXN0ICopXG5cbiAgdHlwZSAnYSB0XG5cbiAgdmFsIGVtcHR5IDogJ2EgdFxuICB2YWwgYXBwZW5kIDogJ2EgdCAtPiAnYSAtPiAnYSB0XG4gIHZhbCBwcmVwZW5kIDogJ2EgdCAtPiAnYSAtPiAnYSB0XG5cbiAgKCogQ29udmVydHMgdGhlIGxpc3RzIGludG8gYSBsaXN0LiBJdCByZXR1cm5zIGEgbmV3IFt0XSB3aGljaCBjYW4gYmUgdXNlZCB0byBlbnN1cmVcbiAgICAgZnV0dXJlIFt0b19saXN0XSBjYWxscyBhZnRlciBuZXcgdGhpbmdzIGFyZSBhcHBlbmRlZCBhcmUgbW9yZSBlZmZpY2llbnQgd2hpbGVcbiAgICAgcmV0dXJuaW5nIHRoZSBzYW1lIHJlc3VsdC4gKilcblxuICB2YWwgdG9fbGlzdCA6ICdhIHQgLT4gJ2EgbGlzdCAqICdhIHRcbmVuZCA9IHN0cnVjdFxuICB0eXBlICdhIHQgPVxuICAgIHsgcHJlcGVuZGVkIDogJ2EgbGlzdFxuICAgIDsgYXBwZW5kZWQgOiAnYSBSZXZlcnNlZF9saXN0LnRcbiAgICB9XG5cbiAgbGV0IGVtcHR5ID0geyBwcmVwZW5kZWQgPSBbXTsgYXBwZW5kZWQgPSBbXSB9XG4gIGxldCBhcHBlbmQgdCBpdGVtID0geyB0IHdpdGggYXBwZW5kZWQgPSBpdGVtIDo6IHQuYXBwZW5kZWQgfVxuICBsZXQgcHJlcGVuZCB0IGl0ZW0gPSB7IHQgd2l0aCBwcmVwZW5kZWQgPSBpdGVtIDo6IHQucHJlcGVuZGVkIH1cblxuICBsZXQgdG9fbGlzdCB0ID1cbiAgICBpZiBSZXZlcnNlZF9saXN0LmlzX2VtcHR5IHQuYXBwZW5kZWRcbiAgICB0aGVuIHQucHJlcGVuZGVkLCB0XG4gICAgZWxzZSAoXG4gICAgICBsZXQgam9pbmVkID0gdC5wcmVwZW5kZWQgQCBSZXZlcnNlZF9saXN0LnJldiB0LmFwcGVuZGVkIGluXG4gICAgICBqb2luZWQsIHsgcHJlcGVuZGVkID0gam9pbmVkOyBhcHBlbmRlZCA9IFtdIH0pXG4gIDs7XG5lbmRcblxubW9kdWxlIFN0YXRlID0gc3RydWN0XG4gIHR5cGUgdCA9XG4gICAgeyBhcHBlbmRlZF9pdGVtcyA6IFN0cmluZy5IYXNoX3NldC50XG4gICAgOyBtdXRhYmxlIGl0ZW1zIDogc3RyaW5nIFByZXBlbmRfYW5kX2FwcGVuZF9saXN0LnRcbiAgICB9XG5cbiAgbGV0IGFsbF9jc3MgPVxuICAgIHsgYXBwZW5kZWRfaXRlbXMgPSBTdHJpbmcuSGFzaF9zZXQuY3JlYXRlICgpOyBpdGVtcyA9IFByZXBlbmRfYW5kX2FwcGVuZF9saXN0LmVtcHR5IH1cbiAgOztcblxuICBsZXQgdG9fc3RyaW5nICgpID1cbiAgICBsZXQgam9pbmVkLCBpdGVtcycgPSBQcmVwZW5kX2FuZF9hcHBlbmRfbGlzdC50b19saXN0IGFsbF9jc3MuaXRlbXMgaW5cbiAgICBhbGxfY3NzLml0ZW1zIDwtIGl0ZW1zJztcbiAgICBTdHJpbmcuY29uY2F0IGpvaW5lZCB+c2VwOlwiXFxuXCJcbiAgOztcblxuICBsZXQgYXBwZW5kIGEgPVxuICAgIGxldCBhbHJlYWR5X2FwcGVuZGVkID0gSGFzaF9zZXQubWVtIGFsbF9jc3MuYXBwZW5kZWRfaXRlbXMgYSBpblxuICAgIGlmIGFscmVhZHlfYXBwZW5kZWRcbiAgICB0aGVuIGBBbHJlYWR5X2FwcGVuZGVkXG4gICAgZWxzZSAoXG4gICAgICBIYXNoX3NldC5hZGQgYWxsX2Nzcy5hcHBlbmRlZF9pdGVtcyBhO1xuICAgICAgYWxsX2Nzcy5pdGVtcyA8LSBQcmVwZW5kX2FuZF9hcHBlbmRfbGlzdC5hcHBlbmQgYWxsX2Nzcy5pdGVtcyBhO1xuICAgICAgYE5ld2x5X2FwcGVuZGVkKVxuICA7O1xuXG4gIGxldCBwcmVwZW5kIGEgPSBhbGxfY3NzLml0ZW1zIDwtIFByZXBlbmRfYW5kX2FwcGVuZF9saXN0LnByZXBlbmQgYWxsX2Nzcy5pdGVtcyBhXG5lbmRcblxubW9kdWxlIFN0cmF0ZWd5ID0gc3RydWN0XG4gIGxldCBzdHJhdGVnaWVzIDogKG1vZHVsZSBTdHJhdGVneV9pbnRmLlMpIGxpc3QgPVxuICAgIFsgKG1vZHVsZSBDb25zdHJ1Y3RlZF9zdHlsZXNoZWV0X3N0cmF0ZWd5KVxuICAgIDsgKG1vZHVsZSBTdHlsZV9lbGVtZW50X3N0cmF0ZWd5LkludG9faGVhZClcbiAgICA7IChtb2R1bGUgU3R5bGVfZWxlbWVudF9zdHJhdGVneS5JbnRvX2JvZHkpXG4gICAgOyAobW9kdWxlIFN0eWxlX2VsZW1lbnRfc3RyYXRlZ3kuSW50b19yb290X2VsZW1lbnQpXG4gICAgXVxuICA7O1xuXG4gIGxldCBmaW5kICgpID1cbiAgICBsZXQgbWF5YmVfaW5pdGlhbGl6ZSA6IChtb2R1bGUgU3RyYXRlZ3lfaW50Zi5TKSAtPiBTdHJhdGVneV9pbnRmLnQgT3JfZXJyb3IudCA9XG4gICAgICBmdW4gKG1vZHVsZSBTdHJhdGVneSkgLT5cbiAgICAgIGxldCVtYXAuT3JfZXJyb3Igc3RhdGUgPSBPcl9lcnJvci50YWcgKFN0cmF0ZWd5LmluaXRpYWxpemUgKCkpIH50YWc6U3RyYXRlZ3kubmFtZSBpblxuICAgICAgU3RyYXRlZ3lfaW50Zi5UIHsgc3RhdGU7IHN0cmF0ZWd5ID0gKG1vZHVsZSBTdHJhdGVneSkgfVxuICAgIGluXG4gICAgbWF0Y2ggYW1fcnVubmluZ190ZXN0IHdpdGhcbiAgICB8IHRydWUgLT4gbWF5YmVfaW5pdGlhbGl6ZSAobW9kdWxlIFRlc3Rpbmdfc3RyYXRlZ3kpXG4gICAgfCBmYWxzZSAtPiBPcl9lcnJvci5maW5kX21hcF9vayBzdHJhdGVnaWVzIH5mOm1heWJlX2luaXRpYWxpemVcbiAgOztcblxuICBsZXQgc2VsZWN0ZWQgOiBTdHJhdGVneV9pbnRmLnQgT3JfZXJyb3IudCBMYXp5LnQgPSBsYXp5IChmaW5kICgpKVxuZW5kXG5cbmxldCBpbnN0YWxsX2luX2RvbSAoKSA9XG4gIG1hdGNoIExhenkuZm9yY2UgU3RyYXRlZ3kuc2VsZWN0ZWQgd2l0aFxuICB8IE9rIChUIHsgc3RhdGU7IHN0cmF0ZWd5ID0gKG1vZHVsZSBNKSB9KSAtPiBNLnVwZGF0ZSBzdGF0ZSAoU3RhdGUudG9fc3RyaW5nICgpKVxuICB8IEVycm9yIGUgLT4gZXByaW50X3MgKEVycm9yLnNleHBfb2ZfdCBlKVxuOztcblxubGV0ICgpID1cbiAgbGV0IHJlYWR5X3N0YXRlID1cbiAgICBPcHRpb24udHJ5X3dpdGggKGZ1biAoKSAtPiBKcy50b19zdHJpbmcgRG9tX2h0bWwuZG9jdW1lbnQjIy5yZWFkeVN0YXRlKVxuICBpblxuICBtYXRjaCByZWFkeV9zdGF0ZSB3aXRoXG4gIHwgU29tZSAoXCJpbnRlcmFjdGl2ZVwiIHwgXCJjb21wbGV0ZVwiKSAtPiBpbnN0YWxsX2luX2RvbSAoKVxuICB8IFNvbWUgKFwibG9hZGluZ1wiIHwgXykgLT5cbiAgICBsZXQgX2lkIDogRG9tX2h0bWwuZXZlbnRfbGlzdGVuZXJfaWQgPVxuICAgICAgRG9tX2h0bWwuYWRkRXZlbnRMaXN0ZW5lcldpdGhPcHRpb25zXG4gICAgICAgIH5wYXNzaXZlOkpzLl90cnVlXG4gICAgICAgIH5jYXB0dXJlOkpzLl9mYWxzZVxuICAgICAgICB+b25jZTpKcy5fdHJ1ZVxuICAgICAgICBEb21faHRtbC53aW5kb3dcbiAgICAgICAgRG9tX2h0bWwuRXZlbnQuZG9tQ29udGVudExvYWRlZFxuICAgICAgICAoRG9tLmhhbmRsZXIgKGZ1biBfIC0+XG4gICAgICAgICAgIGluc3RhbGxfaW5fZG9tICgpO1xuICAgICAgICAgICBKcy5fdHJ1ZSkpXG4gICAgaW5cbiAgICAoKVxuICB8IE5vbmUgLT4gKClcbjs7XG5cbmxldCB1cGRhdGVfc3RyYXRlZ3lfZnJvbV9zdGF0ZSAoKSA9XG4gIG1hdGNoIExhenkucGVlayBTdHJhdGVneS5zZWxlY3RlZCB3aXRoXG4gIHwgTm9uZSAtPlxuICAgICgqIElmIHRoZSBsYXp5IGlzbid0IGZvcmNlZCwgdGhlbiB3ZSBkb24ndCBuZWVkIHRvIGRvIGFueXRoaW5nIGJlY2F1c2UgYWxsIHRoZVxuICAgICAgIGNvbnRlbnRzIHdpbGwgYmUgbG9hZGVkIHdoZW4gW2luc3RhbGxfaW5fZG9tXSBpcyBjYWxsZWQuICopXG4gICAgKClcbiAgfCBTb21lIChPayAoVCB7IHN0YXRlOyBzdHJhdGVneSA9IChtb2R1bGUgTSkgfSkpIC0+IE0udXBkYXRlIHN0YXRlIChTdGF0ZS50b19zdHJpbmcgKCkpXG4gIHwgU29tZSAoRXJyb3IgXykgLT5cbiAgICAoKiBkb24ndCBwcmludCB0aGUgZXJyb3IgYmVjYXVzZSBpdCBhbHJlYWR5IGdvdCBwcmludGVkIGluc2lkZSBbaW5zdGFsbF9pbl9kb21dICopXG4gICAgKClcbjs7XG5cbmxldCBhcHBlbmQgYSA9XG4gIGxldCBhbHJlYWR5X2FwcGVuZGVkID0gU3RhdGUuYXBwZW5kIGEgaW5cbiAgbWF0Y2ggYWxyZWFkeV9hcHBlbmRlZCB3aXRoXG4gIHwgYEFscmVhZHlfYXBwZW5kZWQgLT4gKClcbiAgfCBgTmV3bHlfYXBwZW5kZWQgLT4gdXBkYXRlX3N0cmF0ZWd5X2Zyb21fc3RhdGUgKClcbjs7XG5cbmxldCBwcmVwZW5kIGEgPVxuICBTdGF0ZS5wcmVwZW5kIGE7XG4gIHVwZGF0ZV9zdHJhdGVneV9mcm9tX3N0YXRlICgpXG47O1xuXG5tb2R1bGUgRm9yX3Rlc3RpbmcgPSBzdHJ1Y3RcbiAgbGV0IHRvX3N0cmluZyAoKSA9IFN0YXRlLnRvX3N0cmluZyAoKVxuXG4gIGxldCB3aXRoX3N0cmF0ZWd5IH5mID1cbiAgICBtYXRjaCBMYXp5LmZvcmNlIFN0cmF0ZWd5LnNlbGVjdGVkIHdpdGhcbiAgICB8IEVycm9yIGVycm9yIC0+XG4gICAgICBsZXQgZXJyb3IgPSBFcnJvci50b19zdHJpbmdfaHVtIGVycm9yIGluXG4gICAgICBmYWlsd2l0aCBbJXN0cmluZyBcIm5vIHN0cmF0ZWd5IHNlbGVjdGVkLiBlcnJvcjogJXtlcnJvcn1cIl1cbiAgICB8IE9rIHN0cmF0ZWd5IC0+IGYgc3RyYXRlZ3lcbiAgOztcblxuICBsZXQgc3RyYXRlZ3lfbmFtZSAoKSA9IHdpdGhfc3RyYXRlZ3kgfmY6KGZ1biAoVCB7IHN0cmF0ZWd5ID0gKG1vZHVsZSBNKTsgXyB9KSAtPiBNLm5hbWUpXG5cbiAgbGV0IGR1bXBfc3RyYXRlZ3lfc3RhdGUgKCkgPVxuICAgIHdpdGhfc3RyYXRlZ3kgfmY6KGZ1biAoVCB7IHN0cmF0ZWd5ID0gKG1vZHVsZSBNKTsgc3RhdGUgfSkgLT5cbiAgICAgIHByaW50X2VuZGxpbmUgKE0uRm9yX3Rlc3RpbmcuZHVtcF90ZXN0aW5nX3N0YXRlIHN0YXRlKSlcbiAgOztcbmVuZFxuXG5tb2R1bGUgUHJpdmF0ZSA9IHN0cnVjdFxuICBsZXQgYXBwZW5kID0gYXBwZW5kXG4gIGxldCBwcmVwZW5kID0gcHJlcGVuZFxuXG4gIG1vZHVsZSBEeW5hbWljID0gSW5saW5lX2Nzc19keW5hbWljXG5lbmRcbiJdfQ==
